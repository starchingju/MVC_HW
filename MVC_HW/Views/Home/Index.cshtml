@{
    ViewBag.Title = "Home Page";

    var Lession01 = @"
* 請使用「客戶資料」這個資料庫做開發 (如附件檔案)
* 請實作出「客戶資料管理」、「客戶聯絡人管理」與「客戶銀行帳戶管理」等簡易 CRUD 功能(盡量做各種功能出來)
* 在列表頁要實作「搜尋」功能
* 主選單要有連結可以直接連到三個主要功能的列表頁。
* 對於 Create 與 Edit 表單要套用欄位驗證 (必填、Email格式、欄位長度限制等驗證)
* 實作「客戶聯絡人」時，同一個客戶下的聯絡人，其 Email 不能重複。";

    var Lession02 = @"
 延續上周作業加以延伸開發
* 看完 保哥線上講堂：Language-Integrated Query (LINQ) 快速上手 線上課程
* 修改「客戶資料」表格，新增「客戶分類」欄位，可設定特定選項的分類
* 在「客戶資料列表」頁面新增篩選功能，可以用「客戶分類」欄位進行資料篩選 (下拉選單)
* 在「客戶聯絡人列表」頁面新增篩選功能，可以用「職稱」欄位進行資料篩選
* 修改「客戶資料列表」與「客戶聯絡人列表」頁面，設定讓每個欄位都能進行排序 (可升冪、可降冪排序)
* 實作一個清單頁面，顯示欄位有「客戶名稱、聯絡人數量、銀行帳戶數量」共三個欄位。
* 刪除資料功能不能真的刪除資料庫中的資料，必須修改資料庫，加上一個「是否已刪除」欄位，資料庫中的該欄位為 bit 類型，0 代表未刪除，1 代表已刪除，且列表頁不得顯示已刪除的資料。";

    var Lession03 = @"
* 延續上周作業加以延伸開發
* 修正上週所有 Bugs
* 套用比較正確的模型繫結驗證 (輸入驗證 + 模型驗證)
* 如果可以的話，透過 JavaScript 實作一些 AJAX 操作，後端 MVC 使用 JsonResult 進行回應
* 使用 ClosedXML 這個 NuGet 套件實作資料匯出功能，每個清單頁上都要有可以匯出 Excel 檔案的功能，要用到 FileResult 下載檔案";


}

<div class="jumbotron">
    <h1>MVC</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-6">
        <h2>Lession01</h2>
        <pre>@Lession01 </pre>
        <p>@*<a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a>*@</p>
    </div>
    <div class="col-md-6">
        <h2>Lession02</h2>
        <pre>@Lession02</pre>
    </div>
    <div class="col-md-6">
        <h2>Lession03</h2>
        <pre>@Lession03</pre>
    </div>
</div>